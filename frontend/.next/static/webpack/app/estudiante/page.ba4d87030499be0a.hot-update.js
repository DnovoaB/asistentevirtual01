"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/estudiante/page",{

/***/ "(app-pages-browser)/./lib/api.ts":
/*!********************!*\
  !*** ./lib/api.ts ***!
  \********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   api: function() { return /* binding */ api; },\n/* harmony export */   sendQuestion: function() { return /* binding */ sendQuestion; },\n/* harmony export */   uploadImage: function() { return /* binding */ uploadImage; }\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! axios */ \"(app-pages-browser)/../../../node_modules/axios/lib/axios.js\");\n/* harmony import */ var cohere_ai__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! cohere-ai */ \"(app-pages-browser)/./node_modules/cohere-ai/index.js\");\n/* harmony import */ var cohere_ai__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(cohere_ai__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var tesseract_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tesseract.js */ \"(app-pages-browser)/./node_modules/tesseract.js/src/index.js\");\n/* harmony import */ var tesseract_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(tesseract_js__WEBPACK_IMPORTED_MODULE_1__);\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(app-pages-browser)/./node_modules/process/browser.js\");\n\n\n\nconst API_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:3001/api\";\nconst COHERE_API_KEY = \"hR5rMz8fJMcgEMEC6oUVPcR5ZEfFd8ZVGWDl8Oex\";\nconst cohere = new cohere_ai__WEBPACK_IMPORTED_MODULE_0__.CohereClient({\n    token: COHERE_API_KEY\n});\nconst api = axios__WEBPACK_IMPORTED_MODULE_2__[\"default\"].create({\n    baseURL: API_URL,\n    headers: {\n        \"Content-Type\": \"application/json\"\n    }\n});\n// Función para verificar afirmaciones matemáticas\nconst checkAffirmation = (statement)=>{\n    // Expresión regular para detectar afirmaciones con operaciones básicas\n    const affirmationRegex = /^(\\d+(?:\\.\\d+)?)\\s*([\\+\\-\\*\\/\\^])\\s*(\\d+(?:\\.\\d+)?)\\s*=\\s*(\\d+(?:\\.\\d+)?)$/;\n    const match = statement.match(affirmationRegex);\n    if (match) {\n        const num1 = parseFloat(match[1]);\n        const operator = match[2];\n        const num2 = parseFloat(match[3]);\n        const userAnswer = parseFloat(match[4]);\n        let correctAnswer;\n        switch(operator){\n            case \"+\":\n                correctAnswer = num1 + num2;\n                break;\n            case \"-\":\n                correctAnswer = num1 - num2;\n                break;\n            case \"*\":\n                correctAnswer = num1 * num2;\n                break;\n            case \"/\":\n                correctAnswer = num1 / num2;\n                break;\n            case \"^\":\n                correctAnswer = Math.pow(num1, num2);\n                break;\n            default:\n                return null; // Operación no reconocida\n        }\n        const isCorrect = Math.abs(correctAnswer - userAnswer) < 0.0001; // Tolerancia para errores de punto flotante\n        return {\n            isCorrect,\n            correctAnswer\n        };\n    }\n    return null; // No es una afirmación válida\n};\nconst mathTutorPrompt = \"Eres un tutor experto en matem\\xe1ticas, f\\xedsica y c\\xe1lculos. RESPONDE SIEMPRE EN ESPA\\xd1OL de manera CLARA, DIRECTA y CONCISA.\\n\\nIMPORTANTE: Resuelve cualquier tipo de operaci\\xf3n o problema matem\\xe1tico, incluyendo pero no limitado a:\\n- Aritm\\xe9tica: suma, resta, multiplicaci\\xf3n, divisi\\xf3n, potencias, ra\\xedces\\n- \\xc1lgebra: ecuaciones, sistemas de ecuaciones, factorizaci\\xf3n, simplificaci\\xf3n de expresiones\\n- Geometr\\xeda: \\xe1reas, vol\\xfamenes, per\\xedmetros, trigonometr\\xeda, teorema de Pit\\xe1goras\\n- C\\xe1lculo: l\\xedmites, derivadas, integrales, series\\n- F\\xedsica: leyes del movimiento, termodin\\xe1mica, electricidad y magnetismo, \\xf3ptica\\n- Estad\\xedstica: medidas de tendencia central, probabilidad, distribuciones, regresi\\xf3n\\n\\nSigue estos pasos para resolver el problema:\\n\\n1. Identifica los datos relevantes y las inc\\xf3gnitas.\\n2. Plantea las ecuaciones necesarias o selecciona la f\\xf3rmula apropiada.\\n3. Resuelve paso a paso, mostrando cada operaci\\xf3n realizada.\\n4. Verifica los resultados y comprueba que la soluci\\xf3n tenga sentido en el contexto del problema.\\n5. Proporciona la respuesta final de forma clara y concisa.\\n\\nSi el problema contiene un error o es imposible de resolver, explica por qu\\xe9 y c\\xf3mo se podr\\xeda corregir.\\n\\nRESTRICCIONES:\\n- Usa SOLO espa\\xf1ol.\\n- S\\xc9 BREVE y PRECISO en tus explicaciones.\\n- MUESTRA los c\\xe1lculos clave.\\n- Si la respuesta es un n\\xfamero, redondea a 4 decimales si es necesario.\\n- Si la respuesta es una expresi\\xf3n algebraica, simplif\\xedcala lo m\\xe1ximo posible.\";\nconst sendQuestion = async (question)=>{\n    try {\n        // Primero verificar si la pregunta es una afirmación\n        const affirmationCheck = checkAffirmation(question);\n        if (affirmationCheck) {\n            const { isCorrect, correctAnswer } = affirmationCheck;\n            if (isCorrect) {\n                return {\n                    respuesta: '\\xa1Correcto! La afirmaci\\xf3n \"'.concat(question, '\" es verdadera.'),\n                    error: null\n                };\n            } else {\n                return {\n                    respuesta: 'Incorrecto. La afirmaci\\xf3n \"'.concat(question, '\" no es verdadera. La respuesta correcta es ').concat(correctAnswer.toFixed(4), \".\"),\n                    error: null\n                };\n            }\n        }\n        // Si no es una afirmación, envíala a Cohere para resolverla como una pregunta\n        const response = await cohere.generate({\n            model: \"command\",\n            prompt: \"\".concat(mathTutorPrompt, \"\\n\\n               Problema o pregunta matem\\xe1tica: \").concat(question),\n            maxTokens: 1000,\n            temperature: 0.1\n        });\n        return {\n            respuesta: response.generations[0].text,\n            error: null\n        };\n    } catch (error) {\n        console.error(\"Error al procesar la pregunta matem\\xe1tica:\", error);\n        throw new Error(\"Error al procesar la pregunta matem\\xe1tica\");\n    }\n};\nconst uploadImage = async (image)=>{\n    try {\n        const worker = await tesseract_js__WEBPACK_IMPORTED_MODULE_1__.createWorker(\"spa\");\n        const imageData = await readFileAsDataURL(image);\n        const { data: { text } } = await worker.recognize(imageData);\n        await worker.terminate();\n        console.log(\"Texto extra\\xeddo de la imagen:\", text);\n        const response = await cohere.generate({\n            model: \"command\",\n            prompt: \"\".concat(mathTutorPrompt, '\\n\\n               Problema o pregunta matem\\xe1tica extra\\xedda de la imagen:\\n               \"').concat(text, '\"\\n               \\n               IMPORTANTE: Si el texto extra\\xeddo de la imagen no es claro o contiene errores, menciona esto en tu respuesta y procede con la mejor interpretaci\\xf3n posible.'),\n            maxTokens: 1000,\n            temperature: 0.1\n        });\n        return {\n            resultado: response.generations[0].text,\n            error: null\n        };\n    } catch (error) {\n        console.error(\"Error al procesar la imagen:\", error);\n        throw new Error(\"Error al procesar la imagen matem\\xe1tica\");\n    }\n};\nconst readFileAsDataURL = (file)=>{\n    return new Promise((resolve, reject)=>{\n        const reader = new FileReader();\n        reader.onload = ()=>resolve(reader.result);\n        reader.onerror = reject;\n        reader.readAsDataURL(file);\n    });\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/api.ts\n"));

/***/ })

});